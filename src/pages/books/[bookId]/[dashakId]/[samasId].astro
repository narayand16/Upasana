---
import { getCollection } from "astro:content";
import Layout from "@/layouts/Layout.astro";
import { Breadcrumbs, ReadingControls } from "@/lib/components";
import { getCleanId } from "@/lib/utils";
import type { BookEntry, DashakEntry, SamasEntry } from "@/types/collections";
import type { BreadcrumbItem } from "@/lib/components";

export async function getStaticPaths() {
  const books = await getCollection("books");
  const dashaks = await getCollection("dashaks");
  const samas = await getCollection("samas");

  return samas.map((samas) => {
    const dashak = dashaks.find((dashak) => dashak.id === samas.data.dashakId);
    const book = books.find((book) => book.id === dashak?.data.bookId);

    if (!dashak || !book) {
      throw new Error(
        `Could not find dashak ${samas.data.dashakId} or book for samas ${samas.id}`,
      );
    }

    return {
      params: {
        bookId: dashak.data.bookId,
        dashakId: dashak.id,
        samasId: getCleanId(samas.id),
      },
      props: {
        samas,
        dashak,
        book,
      },
    };
  });
}

// Page-specific props interface
interface SamasPageProps {
  samas: SamasEntry;
  dashak: DashakEntry;
  book: BookEntry;
}

const { samas, dashak, book } = Astro.props as SamasPageProps;
const { Content } = await samas.render();

// Breadcrumb items
const breadcrumbItems: BreadcrumbItem[] = [
  { label: "Home", path: "/" },
  { label: book.data.title, path: `/books/${book.id}` },
  { label: dashak.data.title, path: `/books/${book.id}/${dashak.id}` },
  {
    label: samas.data.title,
    path: `/books/${book.id}/${dashak.id}/${getCleanId(samas.id)}`,
  },
];
---

<Layout
  title={`${samas.data.title} - ${dashak.data.title} - ${book.data.title} - Upasana`}
>
  <div
    class="bg-gradient-to-br from-purple-50 to-indigo-100 dark:from-gray-900 dark:to-gray-800 min-h-screen"
  >
    <div class="container mx-auto px-4 py-6">
      <Breadcrumbs items={breadcrumbItems} client:load />

      <div
        class="reading-container transition-all duration-300"
        id="reading-container"
      >
        <header class="mb-6">
          <h1
            class="text-2xl md:text-3xl font-bold text-gray-900 dark:text-white mb-1"
          >
            {samas.data.title}
          </h1>
          <h2
            class="text-xl md:text-2xl font-devanagari text-primary-600 dark:text-primary-400 mb-4"
          >
            {samas.data.titleDevanagari}
          </h2>
          {
            samas.data.description && (
              <p class="text-gray-700 dark:text-gray-300 mb-2">
                {samas.data.description}
              </p>
            )
          }
        </header>

        <div
          class="bg-white dark:bg-gray-800 rounded-xl shadow-md p-6 md:p-8 mb-8 prose prose-lg dark:prose-invert max-w-none font-devanagari reading-content"
          id="reading-content"
        >
          <Content />
        </div>
      </div>

      <ReadingControls client:load />
    </div>
  </div>
</Layout>

<style>
  /* Note: This style section is now using class composition */
  /* We've moved most styles to utilities.css */
</style>
